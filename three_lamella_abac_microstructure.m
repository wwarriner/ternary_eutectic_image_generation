% Copyright 2017 William Warriner
% 
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
% 
%     http://www.apache.org/licenses/LICENSE-2.0
% 
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

function microstructure = three_lamella_abac_microstructure( ...
    microstructure_x_length_px, ...
    microstructure_y_length_px, ...
    alpha_spacing_px, ...
    volume_fraction_alpha_phase, ...
    volume_fraction_beta_phase, ... 
    alpha_value, ...
    beta_value, ...
    gamma_value, ...
    scaling, ...
    rotation, ...
    translation ...
    )

a= width_of_alpha_phase( ...
    volume_fraction_alpha_phase, ...
    alpha_spacing_px ...
    );

b= width_of_beta_phase( ...
    volume_fraction_beta_phase, ...
    alpha_spacing_px ...
    );

unit_cell = generate_unit_cell( ...
    a, ...
    b, ...
    alpha_spacing_px, ...
    alpha_value, ...
    beta_value, ...
    gamma_value ...
    );

microstructure = generate_microstructure( ...
    unit_cell, ...
    microstructure_x_length_px, ...
    microstructure_y_length_px, ...
    scaling, ...
    rotation, ...
    translation ...
    );

end



function a = width_of_alpha_phase( ...
    va, ...
    lambda_a ...
    )

a = lambda_a * va;

end



function b = width_of_beta_phase( ...
    vb, ...
    lambda_a ...
    )

b = lambda_a * vb;

end



function unit_cell = generate_unit_cell( ...
    a, ...
    b, ...
    alpha_spacing_px, ...
    alpha_value, ...
    beta_value, ...
    gamma_value ...
    )

a = max( 1, round( a ) );
b = max( 1, round( b ) );
unit_cell = create_array_by_fill( gamma_value, alpha_spacing_px );
unit_cell = fill_alpha_phase( a, alpha_value, unit_cell );
unit_cell = fill_beta_phase( b, a, beta_value, unit_cell );

end



function unit_cell = fill_alpha_phase ( alpha_size, alpha_value, unit_cell )

unit_cell( 1:end, 1:alpha_size ) = alpha_value;

end



function unit_cell = fill_beta_phase( beta_size, alpha_size, beta_value, unit_cell)

unit_cell( 1:end, 1+alpha_size:alpha_size+beta_size )= beta_value;

end



function arr = create_array_by_fill( fill_value, x )

arr = repmat( fill_value, x );

end